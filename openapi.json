{
    "openapi": "3.0.1",
    "info": {
      "title": "Zaymo Custom Integration API",
      "description": "API for managing product upsells and customer interactions in email campaigns",
      "license": {
        "name": "MIT"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://api.your-domain.com/example/"
      }
    ],
    "security": [
      {
        "apiKeyAuth": []
      }
    ],
    "tags": [
      {
        "name": "Upsells",
        "description": "Endpoints for managing product upsells in emails"
      },
      {
        "name": "Customer Portal",
        "description": "Endpoints for customer subscription management portal"
      },
      {
        "name": "Reactivate",
        "description": "Endpoints for reactivating cancelled subscriptions"
      }
    ],
    "paths": {
      "/zaymo/upsells/products": {
        "get": {
          "tags": ["Upsells"],
          "summary": "Get Products",
          "description": "Retrieve product information for in-email product blocks. Returns a list of recommended products for in-email upsells. Optionally, if a specific customer's email is provided as a search parameter, the products can be tailored to that customer.",
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "The email address of the customer opening the email. If provided, returns specific product recommendations tailored for that user. If not provided, returns generic product recommendations for all customers.",
              "required": false,
              "schema": {
                "type": "string",
                "format": "email"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with product list",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProductsResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/upsells/add-product": {
        "post": {
          "tags": ["Upsells"],
          "summary": "Add Product",
          "description": "Add a product to a customer's order directly from email. This endpoint processes a customer's product selection from the email upsell widget.",
          "requestBody": {
            "description": "Product and customer information for adding to order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Product successfully added to order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Product or customer not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/upsells/undo-add-product": {
        "post": {
          "tags": ["Upsells"],
          "summary": "Undo Add Product (Optional)",
          "description": "Remove a product from a customer's order that was previously added using the add-product endpoint. Implementation of this endpoint is optional - if not implemented, customers will not be able to undo their purchases in the email upsell widget.",
          "x-optional": true,
          "x-implementation-priority": "low",
          "requestBody": {
            "description": "Product and customer information for removing from order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveProductRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Product successfully removed from order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Product or customer not found, or product was not in the order",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/customer-portal/subscription": {
        "get": {
          "tags": ["Customer Portal"],
          "summary": "Get Current Subscription",
          "description": "Retrieve the customer's current active subscription details including billing information and items. If the customer has multiple subscriptions, we recommend returning the next upcoming subscription.",
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "The email address of the customer",
              "required": true,
              "schema": {
                "type": "string",
                "format": "email"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with subscription details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurrentSubscriptionResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Customer or subscription not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/customer-portal/send-now": {
        "post": {
          "tags": ["Customer Portal"],
          "summary": "Send Subscription Now (Optional)",
          "description": "Trigger immediate processing and shipment of the customer's next upcoming subscription order. Implementation of this endpoint is optional - if not implemented, the 'Send Now' button will not be shown in the customer portal.",
          "x-optional": true,
          "x-implementation-priority": "low",
          "requestBody": {
            "description": "Customer information for immediate subscription processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendSubscriptionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Subscription successfully processed for immediate shipment",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request or subscription cannot be processed now",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Customer or subscription not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/customer-portal/delay": {
        "post": {
          "tags": ["Customer Portal"],
          "summary": "Delay Subscription",
          "description": "Postpone the customer's next subscription billing and shipment to a new date.",
          "requestBody": {
            "description": "Customer information and new billing date for subscription delay",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DelaySubscriptionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Subscription successfully delayed",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request or invalid date",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Customer or subscription not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/reactivate/cancelled-subscriptions": {
        "get": {
          "tags": ["Reactivate"],
          "summary": "Get Cancelled Subscriptions",
          "description": "Retrieve a list of the customer's cancelled subscriptions that are eligible for reactivation. Subscriptions will be displayed in the order they are returned by this endpoint.",
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "The email address of the customer",
              "required": true,
              "schema": {
                "type": "string",
                "format": "email"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with cancelled subscriptions list",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CancelledSubscriptionsResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Customer not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      },
      "/zaymo/reactivate/subscription": {
        "post": {
          "tags": ["Reactivate"],
          "summary": "Reactivate Cancelled Subscription",
          "description": "Reactivate a previously cancelled subscription for the customer.",
          "requestBody": {
            "description": "Subscription reactivation information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactivateSubscriptionRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Subscription successfully reactivated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SuccessResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request or subscription cannot be reactivated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "401": {
              "description": "Authentication error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            },
            "404": {
              "description": "Customer or subscription not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Product": {
          "type": "object",
          "required": [
            "id",
            "title",
            "price",
            "images"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the product"
            },
            "title": {
              "type": "string",
              "description": "Name or title of the product"
            },
            "price": {
              "type": "integer",
              "description": "Price of the product before any discounts (in cents)"
            },
            "compare_at_price": {
              "type": "integer",
              "description": "Strike through price to be shown with product (in cents)"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              },
              "description": "Array of image URL strings for the product"
            },
            "description": {
              "type": "string",
              "description": "Optional description of the product"
            }
          }
        },
        "SubscriptionItem": {
          "type": "object",
          "required": [
            "id",
            "title",
            "price",
            "image",
            "quantity"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique identifier for the product"
            },
            "title": {
              "type": "string",
              "description": "Name or title of the product"
            },
            "price": {
              "type": "number",
              "format": "float",
              "description": "Price of the product in the subscription",
              "example": 29.99
            },
            "image": {
              "type": "string",
              "format": "uri",
              "description": "Image URL string for the product"
            },
            "description": {
              "type": "string",
              "description": "Optional description of the product"
            },
            "quantity": {
              "type": "integer",
              "description": "Quantity of this product in the subscription",
              "example": 2
            }
          }
        },
        "ProductsResponse": {
          "type": "object",
          "required": [
            "success",
            "data"
          ],
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Indicates if the request was successful"
            },
            "data": {
              "type": "object",
              "required": [
                "products"
              ],
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "CurrentSubscriptionResponse": {
          "type": "object",
          "required": [
            "success",
            "data"
          ],
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Indicates if the request was successful"
            },
            "data": {
              "type": "object",
              "required": [
                "next_billing_date",
                "items"
              ],
              "properties": {
                "next_billing_date": {
                  "type": "string",
                  "format": "date",
                  "description": "The date of the next scheduled billing",
                  "example": "2024-02-15"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionItem"
                  },
                  "description": "Products included in the subscription with quantities"
                },
                "shipping_total_cost": {
                  "type": "number",
                  "format": "float",
                  "description": "Total shipping cost for the subscription. This can be an estimated amount. If you do not have a shipping cost, you can return 0.",
                  "example": 5.99
                },
                "order_discount_total": {
                  "type": "number",
                  "format": "float",
                  "description": "Total discount applied to this subscription order. This should not include discounts already applied to item prices. If there are no additional discounts, you can return 0.",
                  "example": 5.00
                },
                "customer_tax_rate": {
                  "type": "number",
                  "format": "float",
                  "description": "Tax rate applied to the customer's subscription (as decimal, e.g., 0.08 for 8%). Used to calculate an estimated tax amount on current items and upsells. If you do not have a tax rate, you can return 0.",
                  "example": 0.08
                }
              }
            }
          }
        },
        "SendSubscriptionRequest": {
          "type": "object",
          "required": [
            "email"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the customer"
            }
          }
        },
        "DelaySubscriptionRequest": {
          "type": "object",
          "required": [
            "email",
            "new_date"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the customer"
            },
            "new_date": {
              "type": "string",
              "format": "date",
              "description": "The new date for the next billing cycle"
            }
          }
        },
        "CancelledSubscription": {
          "type": "object",
          "required": [
            "subscription_id",
            "title",
            "products"
          ],
          "properties": {
            "subscription_id": {
              "type": "string",
              "description": "Unique identifier for the cancelled subscription"
            },
            "title": {
              "type": "string",
              "description": "Title or name of the subscription. Often the frequency is used here ie. 'Every Month' or 'Every 6 Weeks'"
            },
            "products": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SubscriptionItem"
              },
              "description": "Products that were included in the subscription with quantities"
            }
          }
        },
        "CancelledSubscriptionsResponse": {
          "type": "object",
          "required": [
            "success",
            "data"
          ],
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Indicates if the request was successful"
            },
            "data": {
              "type": "object",
              "required": [
                "subscriptions"
              ],
              "properties": {
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CancelledSubscription"
                  }
                }
              }
            }
          }
        },
        "ReactivateSubscriptionRequest": {
          "type": "object",
          "required": [
            "email",
            "subscription_id"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the customer"
            },
            "subscription_id": {
              "type": "string",
              "description": "The unique identifier for the subscription to reactivate"
            }
          }
        },
        "AddProductRequest": {
          "type": "object",
          "required": [
            "email",
            "product_id"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the customer"
            },
            "product_id": {
              "type": "string",
              "description": "The unique identifier for the selected product (from the get products endpoint)"
            }
          }
        },
        "RemoveProductRequest": {
          "type": "object",
          "required": [
            "email",
            "product_id"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "The email address of the customer"
            },
            "product_id": {
              "type": "string",
              "description": "The unique identifier for the product to be removed from the order"
            }
          }
        },
        "SuccessResponse": {
          "type": "object",
          "required": [
            "success"
          ],
          "properties": {
            "success": {
              "type": "boolean",
              "example": true,
              "description": "Indicates if the request was successful"
            }
          }
        },
        "Error": {
          "type": "object",
          "required": [
            "success",
            "error"
          ],
          "properties": {
            "success": {
              "type": "boolean",
              "example": false
            },
            "error": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error code identifier"
                },
                "message": {
                  "type": "string",
                  "description": "Human-readable error message"
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "apiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "X-Zaymo-API-Key",
          "description": "Zaymo will authenticate requests using the API key you provide"
        }
      }
    }
  }